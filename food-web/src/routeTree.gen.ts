/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as RecipesIndexImport } from './routes/recipes/index'
import { Route as NewRecipeIndexImport } from './routes/newRecipe/index'
import { Route as InspirationIndexImport } from './routes/inspiration/index'
import { Route as RecipesRecipeIdIndexImport } from './routes/recipes/$recipeId/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RecipesIndexRoute = RecipesIndexImport.update({
  id: '/recipes/',
  path: '/recipes/',
  getParentRoute: () => rootRoute,
} as any)

const NewRecipeIndexRoute = NewRecipeIndexImport.update({
  id: '/newRecipe/',
  path: '/newRecipe/',
  getParentRoute: () => rootRoute,
} as any)

const InspirationIndexRoute = InspirationIndexImport.update({
  id: '/inspiration/',
  path: '/inspiration/',
  getParentRoute: () => rootRoute,
} as any)

const RecipesRecipeIdIndexRoute = RecipesRecipeIdIndexImport.update({
  id: '/recipes/$recipeId/',
  path: '/recipes/$recipeId/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/inspiration/': {
      id: '/inspiration/'
      path: '/inspiration'
      fullPath: '/inspiration'
      preLoaderRoute: typeof InspirationIndexImport
      parentRoute: typeof rootRoute
    }
    '/newRecipe/': {
      id: '/newRecipe/'
      path: '/newRecipe'
      fullPath: '/newRecipe'
      preLoaderRoute: typeof NewRecipeIndexImport
      parentRoute: typeof rootRoute
    }
    '/recipes/': {
      id: '/recipes/'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof RecipesIndexImport
      parentRoute: typeof rootRoute
    }
    '/recipes/$recipeId/': {
      id: '/recipes/$recipeId/'
      path: '/recipes/$recipeId'
      fullPath: '/recipes/$recipeId'
      preLoaderRoute: typeof RecipesRecipeIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/inspiration': typeof InspirationIndexRoute
  '/newRecipe': typeof NewRecipeIndexRoute
  '/recipes': typeof RecipesIndexRoute
  '/recipes/$recipeId': typeof RecipesRecipeIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/inspiration': typeof InspirationIndexRoute
  '/newRecipe': typeof NewRecipeIndexRoute
  '/recipes': typeof RecipesIndexRoute
  '/recipes/$recipeId': typeof RecipesRecipeIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/inspiration/': typeof InspirationIndexRoute
  '/newRecipe/': typeof NewRecipeIndexRoute
  '/recipes/': typeof RecipesIndexRoute
  '/recipes/$recipeId/': typeof RecipesRecipeIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/inspiration'
    | '/newRecipe'
    | '/recipes'
    | '/recipes/$recipeId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/inspiration' | '/newRecipe' | '/recipes' | '/recipes/$recipeId'
  id:
    | '__root__'
    | '/'
    | '/inspiration/'
    | '/newRecipe/'
    | '/recipes/'
    | '/recipes/$recipeId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  InspirationIndexRoute: typeof InspirationIndexRoute
  NewRecipeIndexRoute: typeof NewRecipeIndexRoute
  RecipesIndexRoute: typeof RecipesIndexRoute
  RecipesRecipeIdIndexRoute: typeof RecipesRecipeIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  InspirationIndexRoute: InspirationIndexRoute,
  NewRecipeIndexRoute: NewRecipeIndexRoute,
  RecipesIndexRoute: RecipesIndexRoute,
  RecipesRecipeIdIndexRoute: RecipesRecipeIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/inspiration/",
        "/newRecipe/",
        "/recipes/",
        "/recipes/$recipeId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/inspiration/": {
      "filePath": "inspiration/index.tsx"
    },
    "/newRecipe/": {
      "filePath": "newRecipe/index.tsx"
    },
    "/recipes/": {
      "filePath": "recipes/index.tsx"
    },
    "/recipes/$recipeId/": {
      "filePath": "recipes/$recipeId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
